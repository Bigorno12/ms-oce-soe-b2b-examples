plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
    id "org.openapi.generator" version "7.10.0"
}

group = 'com.swisscom'
version = '1.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    google()
    mavenLocal()
}

ext {
    set('springModulithVersion', "1.3.1")
    set('swaggerAnnotations', "2.2.28")
    set('jakarta', "3.1.1")
    set('annotationApi', "3.0.0")
}

dependencies {
    //Spring Modulith
    implementation platform("org.springframework.modulith:spring-modulith-bom:${springModulithVersion}")
    //Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    //Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    // Openapi
    implementation "io.swagger.core.v3:swagger-annotations:${swaggerAnnotations}"
    implementation "jakarta.validation:jakarta.validation-api:${jakarta}"
}

openApiValidate {
    inputSpec.set("$projectDir/java21/../openapi/petstore.yaml")
}

openApiGenerate {
    generatorName.set("java")
    inputSpec.set("$projectDir/java21/../openapi/petstore.yaml")
    outputDir.set("${projectDir}/build/generated/openapi")
    apiPackage.set("com.swisscom.example.api")
    modelPackage.set("com.swisscom.example.model")
    skipValidateSpec.set(true)
    configOptions.set([
            collectionType    : 'list',
            dateLibrary       : 'java21',
            enumPropertyNaming: 'UPPERCASE',
            java21            : 'true',
            interfaceOnly     : 'true',
            library           : 'restclient',
            openApiNullable   : 'false',
            useJakartaEe      : 'true'
    ])
    generateApiTests.set(false)
    generateModelTests.set(false)
    generateApiDocumentation.set(false)
    generateModelDocumentation.set(false)
}

test {
    useJUnit()
}

sourceSets {
    main {
        java {
            srcDir("${projectDir}/build/generated/openapi/src/main/java")
        }
    }
}

tasks.compileJava {
    dependsOn(tasks.openApiValidate)
    dependsOn(tasks.openApiGenerate)
}